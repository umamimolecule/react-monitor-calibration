{"version":3,"sources":["Actions/slides.js","Reducers/slides.js","Reducers/index.js","Store/index.js","Components/Slide/ColorBar.jsx","Components/Slide/Slide.jsx","Components/Header/CurrentSlideHeader.jsx","Components/Header/InstructionsHeader.jsx","Components/Header/WhatIsThis.jsx","Components/Header/Header.jsx","Components/Slides/Slides.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SHOW_NEXT_SLIDE","SHOW_PREVIOUS_SLIDE","GOTO_SLIDE","slidesArray","colors","initialSlidesState","currentSlideIndex","currentSlide","slides","uniqueId","uuidv4","updateLocalStorage","payload","id","slideIndex","date","Date","now","window","localStorage","setItem","JSON","stringify","rootReducer","combineReducers","state","arguments","length","undefined","action","type","nextSlideIndex","Object","objectSpread","previousSlideIndex","index","store","initialState","createStore","reducer","configureStore","ColorBar","react_default","a","createElement","className","style","backgroundColor","this","props","color","Component","Slide","onKeyPress","e","keyCode","_this","showPreviousSlide","showNextSlide","onClick","synchroniseWithOtherPages","syncData","parse","getItem","gotoSlide","setTimeout","document","addEventListener","removeEventListener","map","ColorBar_ColorBar","key","connect","dispatch","CurrentSlideHeader","totalSlideCount","InstructionsHeader","openInNewWindow","open","location","href","text","WhatIsThis","target","Header","Components_Header_CurrentSlideHeader","class","WhatIsThis_WhatIsThis","InstructionsHeader_InstructionsHeader","Slides","Header_Header_Header","Components_Slide_Slide","App","Slides_Slides_Slides","Boolean","hostname","match","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c491c65c.chunk.js","sourcesContent":["export const SHOW_NEXT_SLIDE = \"SHOW_NEXT_SLIDE\";\r\nexport const SHOW_PREVIOUS_SLIDE = \"SHOW_PREVIOUS_SLIDE\";\r\nexport const GOTO_SLIDE = \"GOTO_SLIDE\";\r\n\r\nexport function showNextSlide() {\r\n  return { type: SHOW_NEXT_SLIDE };\r\n}\r\n\r\nexport function showPreviousSlide() {\r\n  return { type: SHOW_PREVIOUS_SLIDE };\r\n}\r\n\r\nexport function gotoSlide(index) {\r\n  return { type: GOTO_SLIDE, index };\r\n}\r\n","import uuidv4 from \"uuid/v4\";\r\n\r\nimport {\r\n  SHOW_NEXT_SLIDE,\r\n  SHOW_PREVIOUS_SLIDE,\r\n  GOTO_SLIDE\r\n} from \"../Actions/slides\";\r\n\r\nconst black = \"#000000\";\r\nconst red = \"#ff0000\";\r\nconst green = \"#00ff00\";\r\nconst blue = \"#0000ff\";\r\nconst grey1 = \"#3f3f3f\";\r\nconst grey2 = \" #7f7f7f\";\r\nconst grey3 = \"#c4c4c4\";\r\nconst white = \"#ffffff\";\r\nconst blue1 = \"#3f3fff\";\r\nconst blue2 = \"#7070FF\";\r\nconst blue3 = \"#9E9EFF\";\r\nconst blue4 = \"#c4c4ff\";\r\nconst green1 = \"#3f7f3f\";\r\nconst green2 = \"#52A552\";\r\nconst green3 = \"#66CC66\";\r\nconst green4 = \"#7FFF7F\";\r\nconst red1 = \"#ff1f1f\";\r\nconst red2 = \"#FF6060\";\r\nconst red3 = \"#FF9696\";\r\nconst red4 = \"#FFC1C1\";\r\n\r\nconst slidesArray = [\r\n  {\r\n    colors: [red, green, blue, white]\r\n  },\r\n  {\r\n    colors: [grey1, grey2, grey3, white]\r\n  },\r\n  {\r\n    colors: [black]\r\n  },\r\n  {\r\n    colors: [grey1]\r\n  },\r\n  {\r\n    colors: [grey2]\r\n  },\r\n  {\r\n    colors: [grey3]\r\n  },\r\n  {\r\n    colors: [white]\r\n  },\r\n  {\r\n    colors: [red1, red2, red3, red4]\r\n  },\r\n  {\r\n    colors: [green1, green2, green3, green4]\r\n  },\r\n  {\r\n    colors: [blue1, blue2, blue3, blue4]\r\n  }\r\n];\r\n\r\nexport const initialSlidesState = {\r\n  currentSlideIndex: 0,\r\n  currentSlide: slidesArray[0],\r\n  slides: slidesArray,\r\n  uniqueId: uuidv4()\r\n};\r\n\r\nexport default function slides(state = initialSlidesState, action) {\r\n  switch (action.type) {\r\n    case SHOW_NEXT_SLIDE:\r\n      const nextSlideIndex =\r\n        (state.currentSlideIndex + 1) % state.slides.length;\r\n      updateLocalStorage(nextSlideIndex, state.uniqueId);\r\n      return {\r\n        ...state,\r\n        currentSlideIndex: nextSlideIndex,\r\n        currentSlide: state.slides[nextSlideIndex]\r\n      };\r\n    case SHOW_PREVIOUS_SLIDE:\r\n      const previousSlideIndex =\r\n        (state.currentSlideIndex - 1 + state.slides.length) %\r\n        state.slides.length;\r\n      updateLocalStorage(previousSlideIndex, state.uniqueId);\r\n      return {\r\n        ...state,\r\n        currentSlideIndex: previousSlideIndex,\r\n        currentSlide: state.slides[previousSlideIndex]\r\n      };\r\n    case GOTO_SLIDE:\r\n      return {\r\n        ...state,\r\n        currentSlideIndex: action.index,\r\n        currentSlide: state.slides[action.index]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction updateLocalStorage(currentSlideIndex, uniqueId) {\r\n  var payload = {\r\n    id: uniqueId,\r\n    slideIndex: currentSlideIndex,\r\n    date: Date.now()\r\n  };\r\n  window.localStorage.setItem(\"syncdata\", JSON.stringify(payload));\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport slides from \"./slides\";\r\n\r\nconst rootReducer = combineReducers({\r\n  slides\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"../Reducers/index\";\r\n\r\nexport function configureStore(initialState = {}) {\r\n  const store = createStore(reducer, initialState);\r\n  return store;\r\n}\r\n\r\nexport const store = configureStore();\r\n","import React, { Component } from \"react\";\r\nimport T from \"prop-types\";\r\n\r\nimport \"./ColorBar.css\";\r\n\r\nexport default class ColorBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ColorBar\" style={{ backgroundColor: this.props.color }} />\r\n    );\r\n  }\r\n}\r\n\r\nColorBar.propTypes = {\r\n  color: T.string.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport T from \"prop-types\";\r\nimport uuidv4 from \"uuid/v4\";\r\n\r\nimport \"./Slide.css\";\r\nimport ColorBar from \"./ColorBar\";\r\nimport {\r\n  showNextSlide,\r\n  showPreviousSlide,\r\n  gotoSlide\r\n} from \"../../Actions/slides\";\r\n\r\nclass Slide extends Component {\r\n  onKeyPress = e => {\r\n    if (e.keyCode === 37) {\r\n      this.props.showPreviousSlide();\r\n    } else {\r\n      this.props.showNextSlide();\r\n    }\r\n  };\r\n\r\n  onClick = () => {\r\n    this.props.showNextSlide();\r\n  };\r\n\r\n  synchroniseWithOtherPages = () => {\r\n    var syncData = JSON.parse(window.localStorage.getItem(\"syncdata\"));\r\n    if (\r\n      syncData &&\r\n      syncData.id !== this.props.uniqueId &&\r\n      syncData.slideIndex !== this.props.currentSlideIndex\r\n    ) {\r\n      this.props.gotoSlide(syncData.slideIndex, true);\r\n    }\r\n    setTimeout(this.synchroniseWithOtherPages, 200);\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keypress\", this.onKeyPress);\r\n    this.synchroniseWithOtherPages();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keypress\", this.onKeyPress);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Slide\" onClick={this.onClick}>\r\n        {this.props.colors.map((color, index) => {\r\n          return <ColorBar key={index} color={color} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSlide.propTypes = {\r\n  colors: T.arrayOf(T.string.isRequired).isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  uniqueId: state.slides.uniqueId,\r\n  colors: state.slides.currentSlide.colors,\r\n  currentSlideIndex: state.slides.currentSlideIndex\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showNextSlide: () => {\r\n    dispatch(showNextSlide());\r\n  },\r\n\r\n  showPreviousSlide: () => {\r\n    dispatch(showPreviousSlide());\r\n  },\r\n\r\n  gotoSlide: index => {\r\n    dispatch(gotoSlide(index));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Slide);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport T from \"prop-types\";\r\n\r\nimport \"./CurrentSlideHeader.css\";\r\n\r\nclass CurrentSlideHeader extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"CurrentSlideHeader\">\r\n        Slide {this.props.currentSlide} of {this.props.totalSlideCount}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCurrentSlideHeader.propTypes = {\r\n  currentSlide: T.number.isRequired,\r\n  totalSlideCount: T.number.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentSlide: state.slides.currentSlideIndex + 1,\r\n  totalSlideCount: state.slides.slides.length\r\n});\r\n\r\nexport default connect(mapStateToProps)(CurrentSlideHeader);\r\n","import React, { Component } from \"react\";\r\nimport T from \"prop-types\";\r\n\r\nimport \"./InstructionsHeader.css\";\r\n\r\nexport default class InstructionsHeader extends Component {\r\n  openInNewWindow = () => {\r\n    window.open(window.location.href, \"_blank\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"InstructionsHeader-container\">\r\n        <div\r\n          className=\"InstructionsHeader-newwindow\"\r\n          onClick={this.openInNewWindow}\r\n        >\r\n          Click here to open this page in a new window\r\n        </div>\r\n        <div className=\"InstructionsHeader\">{this.props.text}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInstructionsHeader.propTypes = {\r\n  text: T.string\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./WhatIsThis.css\";\r\n\r\nexport default class WhatIsThis extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"WhatIsThis\">\r\n        <a\r\n          href=\"https://github.com/umamimolecule/react-monitor-calibration\"\r\n          target=\"__blank\"\r\n        >\r\n          Monitor Calibration Helper\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./Header.css\";\r\nimport CurrentSlideHeader from \"./CurrentSlideHeader\";\r\nimport InstructionsHeader from \"./InstructionsHeader\";\r\nimport WhatIsThis from \"./WhatIsThis\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Header\">\r\n        <CurrentSlideHeader />\r\n        <div class=\"Header-columns\">\r\n          <WhatIsThis />\r\n          <InstructionsHeader\r\n            text={\r\n              \"Click on window or press any key to jump to the next slide, or use arrow keys to go back and forward\"\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport T from \"prop-types\";\r\n\r\nimport \"./Slides.css\";\r\n\r\nimport Slide from \"../Slide/Slide\";\r\nimport Header from \"../Header/Header\";\r\n\r\nexport default class Slides extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Slide />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Slides from \"./Components/Slides/Slides\";\n\nclass App extends Component {\n  render() {\n    return <Slides />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}